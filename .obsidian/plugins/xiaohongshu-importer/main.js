/*
 * Xiaohongshu Importer plugin
 * Author: bnchiang96
 * Version: 1.1.1
 */

var F=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var X=Object.prototype.hasOwnProperty;var R=(u,g)=>{for(var t in g)F(u,t,{get:g[t],enumerable:!0})},H=(u,g,t,e)=>{if(g&&typeof g=="object"||typeof g=="function")for(let s of A(g))!X.call(u,s)&&s!==t&&F(u,s,{get:()=>g[s],enumerable:!(e=j(g,s))||e.enumerable});return u};var B=u=>H(F({},"__esModule",{value:!0}),u);var P={};R(P,{default:()=>C});module.exports=B(P);var i=require("obsidian"),O={defaultFolder:"XHS Notes",categories:["\u7F8E\u98DF","\u65C5\u884C","\u5A31\u4E50","\u77E5\u8BC6","\u5DE5\u4F5C","\u60C5\u611F","\u4E2A\u4EBA\u6210\u957F","\u4F18\u60E0","\u641E\u7B11","\u80B2\u513F"],lastCategory:"",downloadMedia:!1},C=class extends i.Plugin{async onload(){await this.loadSettings(),this.addRibbonIcon("book","Import Xiaohongshu note",async()=>{let t=await this.promptForShareText();if(t&&t.text){let e=this.extractURL(t.text);e?await this.importXHSNote(e,t.category,t.downloadMedia):new i.Notice("No valid Xiaohongshu URL found in the text.")}}),this.addCommand({id:"import",name:"Import Xiaohongshu note",callback:async()=>{let t=await this.promptForShareText();if(t&&t.text){let e=this.extractURL(t.text);e?await this.importXHSNote(e,t.category,t.downloadMedia):new i.Notice("No valid Xiaohongshu URL found in the text.")}}}),this.addSettingTab(new E(this.app,this))}async loadSettings(){this.settings=Object.assign({},O,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async promptForShareText(){return new Promise(t=>{new D(this.app,this.settings,s=>t(s)).open()})}extractURL(t){let e=t.match(/http:\/\/xhslink\.com\/a\/[^\s,，]+/);return e?e[0]:null}sanitizeFilename(t){let e=t.replace(/[^a-zA-Z0-9\u4e00-\u9fa5\s-_]/g,"").trim();return e=e.replace(/\s+/g,"-"),e=e.length>0?e:"Untitled",e.substring(0,50)}async downloadMediaFile(t,e,s){try{let n=await fetch(t);if(!n.ok)throw new Error(`HTTP error ${n.status}`);let l=await(await n.blob()).arrayBuffer(),d=`${e}/${s}`;return await this.app.vault.adapter.writeBinary(d,l),s}catch(n){return console.log(`Failed to download media from ${t}: ${n.message}`),new i.Notice(`Failed to download media: ${n.message}`),t}}async importXHSNote(t,e,s){try{let a=(await(0,i.requestUrl)({url:t})).text,l=this.extractTitle(a),d=this.extractVideoUrl(a),o=this.extractImages(a),w=this.extractContent(a),S=this.isVideoNote(a),x=new Date().toISOString().split("T")[0],k=new Date().toLocaleString(),c=`---
title: ${l}
source: ${t}
date: ${x}
Imported At: ${k}
category: ${e}
---
# ${l}

`,b=this.settings.defaultFolder||"",r=`${b}/media`,v=e||"Uncategorized",I=b?`${b}/${v}`:v,f=l.replace(/[/\\?%*:|"<>]/g,"-").trim();f=f.length>0?f:"Untitled",f=f.substring(0,50);let N=S?`[V]${f}`:f,L=`${I}/${N}.md`,M=this.sanitizeFilename(l);if(await this.app.vault.adapter.exists(I)||await this.app.vault.createFolder(I),s&&!await this.app.vault.adapter.exists(r)&&await this.app.vault.createFolder(r),S){if(d){let m=d;if(s){let h=`${M}-${Date.now()}.mp4`,p=await this.downloadMediaFile(d,r,h);m=p.startsWith("http")?p:`../media/${p}`}c+=`<video controls src="${m}" width="100%"></video>

`}else if(o.length>0){let m=o[0];if(s){let h=`${M}-0-${Date.now()}.jpg`,p=await this.downloadMediaFile(o[0],r,h);m=p.startsWith("http")?p:`../media/${p}`}c+=`[![Cover Image](${m})](${t})

`,new i.Notice("Video URL not found; using cover image as fallback.")}let y=w.replace(/#\S+/g,"").trim();c+=`${y.split(`
`).join(`
`)}

`;let $=this.extractTags(w);$.length>0&&(c+="```\n",c+=$.map(m=>`#${m}`).join(" ")+`
`,c+="```\n")}else{let y=[];if(o.length>0){if(s)for(let h=0;h<o.length;h++){let p=`${M}-${h}-${Date.now()}.jpg`,T=await this.downloadMediaFile(o[h],r,p),_=T.startsWith("http")?T:`../media/${T}`;y.push(_)}else y=o;c+=`![Cover Image](${y[0]})

`}let $=w.replace(/#[^#\s]*(?:\s+#[^#\s]*)*\s*/g,"").trim();c+=`${$.split(`
`).join(`
`)}

`;let m=this.extractTags(w);if(m.length>0&&(c+="```\n",c+=m.map(h=>`#${h}`).join(" ")+`
`,c+="```\n\n"),o.length>0){let h=y.map(p=>`![Image](${p})`).join(`
`);c+=`${h}
`}}let U=await this.app.vault.create(L,c);await this.app.workspace.getLeaf(!0).openFile(U),this.settings.lastCategory=e,await this.saveSettings(),new i.Notice(`Imported Xiaohongshu note as ${L}`)}catch(n){console.log(`Failed to import note from ${t}: ${n.message}`),new i.Notice(`Failed to import note: ${n.message}`)}}extractTitle(t){let e=t.match(/<title>(.*?)<\/title>/);return e?e[1].replace(" - \u5C0F\u7EA2\u4E66",""):"Untitled Xiaohongshu Note"}extractImages(t){let e=t.match(/window\.__INITIAL_STATE__=(.*?)<\/script>/s);if(!e)return[];try{let n=e[1].trim().replace(/undefined/g,"null"),a=JSON.parse(n),l=Object.keys(a.note.noteDetailMap)[0];return(a.note.noteDetailMap[l].note.imageList||[]).map(o=>o.urlDefault||"").filter(o=>o&&o.startsWith("http"))}catch(s){return console.log(`Failed to parse images: ${s.message}`),[]}}extractVideoUrl(t){let e=t.match(/window\.__INITIAL_STATE__=(.*?)<\/script>/s);if(!e)return null;try{let n=e[1].trim().replace(/undefined/g,"null"),a=JSON.parse(n),l=Object.keys(a.note.noteDetailMap)[0],o=a.note.noteDetailMap[l].note.video;return!o||!o.media||!o.media.stream?null:o.media.stream.h264&&o.media.stream.h264.length>0?o.media.stream.h264[0].masterUrl||null:o.media.stream.h265&&o.media.stream.h265.length>0&&o.media.stream.h265[0].masterUrl||null}catch(s){return console.log(`Failed to parse video URL: ${s.message}`),null}}extractContent(t){let e=t.match(/<div id="detail-desc" class="desc">([\s\S]*?)<\/div>/);if(e)return e[1].replace(/<[^>]+>/g,"").replace(/\[话题\]/g,"").replace(/\[[^\]]+\]/g,"").trim()||"Content not found";let s=t.match(/window\.__INITIAL_STATE__=(.*?)<\/script>/s);if(s)try{let a=s[1].trim().replace(/undefined/g,"null"),l=JSON.parse(a),d=Object.keys(l.note.noteDetailMap)[0];return(l.note.noteDetailMap[d].note.desc||"").replace(/\[话题\]/g,"").replace(/\[[^\]]+\]/g,"").trim()||"Content not found"}catch(n){console.log(`Failed to parse content from JSON: ${n.message}`)}return"Content not found"}isVideoNote(t){let e=t.match(/window\.__INITIAL_STATE__=(.*?)<\/script>/s);if(!e)return!1;try{let n=e[1].trim().replace(/undefined/g,"null"),a=JSON.parse(n),l=Object.keys(a.note.noteDetailMap)[0];return a.note.noteDetailMap[l].note.type==="video"}catch(s){return console.log(`Failed to determine note type: ${s.message}`),!1}}extractTags(t){return(t.match(/#\S+/g)||[]).map(s=>s.replace("#","").trim())}onunload(){}},E=class extends i.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),new i.Setting(t).setName("Default folder").setDesc("Base folder where category subfolders will be created (e.g., 'XHS Notes'). Leave empty for vault root.").addText(e=>e.setPlaceholder("XHS Notes").setValue(this.plugin.settings.defaultFolder).onChange(async s=>{this.plugin.settings.defaultFolder=s.trim(),await this.plugin.saveSettings()})),new i.Setting(t).setName("Download media").setDesc("Default setting: if enabled, images and videos will be downloaded locally to 'XHS Notes/media/'. Can be overridden per import.").addToggle(e=>e.setValue(this.plugin.settings.downloadMedia).onChange(async s=>{this.plugin.settings.downloadMedia=s,await this.plugin.saveSettings()})),new i.Setting(t).setName("Categories").setHeading(),t.createEl("p",{text:"Add, edit, or remove categories for organizing notes. Use Up/Down to reorder."}),this.plugin.settings.categories.forEach((e,s)=>{let n=new i.Setting(t).setName(`Category ${s+1}`).addText(a=>a.setValue(e).onChange(async l=>{this.plugin.settings.categories[s]=l.trim(),await this.plugin.saveSettings()}));n.addButton(a=>a.setIcon("arrow-up").setTooltip("Move up").setDisabled(s===0).onClick(async()=>{s>0&&([this.plugin.settings.categories[s],this.plugin.settings.categories[s-1]]=[this.plugin.settings.categories[s-1],this.plugin.settings.categories[s]],await this.plugin.saveSettings(),this.display())})),n.addButton(a=>a.setIcon("arrow-down").setTooltip("Move down").setDisabled(s===this.plugin.settings.categories.length-1).onClick(async()=>{s<this.plugin.settings.categories.length-1&&([this.plugin.settings.categories[s],this.plugin.settings.categories[s+1]]=[this.plugin.settings.categories[s+1],this.plugin.settings.categories[s]],await this.plugin.saveSettings(),this.display())})),n.addButton(a=>a.setButtonText("Remove").onClick(async()=>{this.plugin.settings.categories.splice(s,1),await this.plugin.saveSettings(),this.display()}))}),new i.Setting(t).addButton(e=>e.setButtonText("Add category").onClick(async()=>{this.plugin.settings.categories.push("New Category"),await this.plugin.saveSettings(),this.display()}))}},D=class extends i.Modal{constructor(t,e,s){super(t);this.result=null;this.settings=e,this.onSubmit=s,this.selectedCategory=this.settings.lastCategory&&this.settings.categories.includes(this.settings.lastCategory)?this.settings.lastCategory:this.settings.categories[0]||"\u5176\u4ED6",this.downloadMedia=this.settings.downloadMedia}onOpen(){let{contentEl:t}=this;t.addClass("xhs-modal-content"),t.createEl("h2",{text:"Import Xiaohongshu note"});let e=t.createEl("div",{cls:"xhs-modal-row"});e.createEl("p",{text:"Paste the share text below:"});let s=e.createEl("textarea",{cls:"xhs-modal-textarea",attr:{placeholder:"e.g., 64 \u4E0D\u53EB\u5C0F\u9EC4\u4E86\u53D1\u5E03\u4E86\u4E00\u7BC7\u5C0F\u7EA2\u4E66\u7B14\u8BB0..."}}),n=t.createEl("div",{cls:"xhs-modal-row"});n.createEl("p",{text:"Select a category:"});let a=n.createEl("div",{cls:"xhs-chip-container"}),l=()=>{a.querySelectorAll("button").forEach(r=>{r.textContent===this.selectedCategory?r.classList.add("xhs-chip--selected"):r.classList.remove("xhs-chip--selected")})};this.settings.categories.forEach(r=>{let v=a.createEl("button",{text:r,cls:"xhs-chip"});r===this.selectedCategory&&v.classList.add("xhs-chip--selected"),v.addEventListener("click",()=>{this.selectedCategory=r,l()})});let d=a.createEl("button",{text:"\u5176\u4ED6",cls:"xhs-chip"});this.selectedCategory==="\u5176\u4ED6"&&d.classList.add("xhs-chip--selected"),d.addEventListener("click",()=>{this.selectedCategory="\u5176\u4ED6",l()});let w=t.createEl("div",{cls:["xhs-modal-row","xhs-download-row"]}).createEl("div",{cls:"xhs-download-wrapper"}),S="download-media-checkbox",x=w.createEl("input",{attr:{type:"checkbox",id:S}});x.checked=this.downloadMedia,x.addEventListener("change",()=>{this.downloadMedia=x.checked});let k=w.createEl("label",{text:"Download media locally for this import",cls:"xhs-download-label",attr:{for:S}});t.createEl("div",{cls:["xhs-modal-row","xhs-button-row"]}).createEl("button",{text:"Import",cls:"xhs-submit-button"}).addEventListener("click",()=>{this.result={text:s.value.trim(),category:this.selectedCategory,downloadMedia:this.downloadMedia},this.close()}),s.addEventListener("keypress",r=>{r.key==="Enter"&&!r.shiftKey&&(r.preventDefault(),this.result={text:s.value.trim(),category:this.selectedCategory,downloadMedia:this.downloadMedia},this.close())})}onClose(){this.onSubmit(this.result)}};

/* nosourcemap */